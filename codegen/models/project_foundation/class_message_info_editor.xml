<class name="message info editor">
    Add and/or remove recipients and it's parameters within message info.

    Usage:
      1. Unpack binary message info that was obtained from RecipientCipher.
      2. Add and/or remove key recipients.
      3. Pack MessagInfo to the binary data.

    <require interface="encrypt"/>
    <require interface="decrypt"/>
    <require interface="public key"/>
    <require interface="private key"/>
    <require interface="key cipher"/>
    <require interface="message info serializer"/>
    <require class="alg factory"/>
    <require class="key alg factory"/>
    <require class="key provider"/>
    <require impl="ctr drbg"/>
    <require impl="message info der serializer"/>

    <dependency name="random" interface="random"/>
    <property name="message info" class="message info"/>
    <property name="message info serializer" interface="message info serializer"/>
    <property name="encryption key" class="buffer"/>
    <property name="non message info data" class="buffer"/>

    <method name="setup defaults">
        Set dependencies to it's defaults.

        <return enum="status"/>
    </method>

    <method name="unpack">
        Unpack serialized message info.

        Note that recipients can only be removed but not added.
        Note, use "unlock" method to be able to add new recipients as well.

        <argument name="message info data" class="data"/>

        <return enum="status"/>
    </method>

    <method name="unlock">
        Decrypt encryption key this allows adding new recipients.

        <argument name="owner recipient id" class="data"/>
        <argument name="owner private key" interface="private key"/>

        <return enum="status"/>
    </method>

    <method name="add key recipient">
        Add recipient defined with id and public key.

        <argument name="recipient id" class="data"/>
        <argument name="public key" interface="public key"/>

        <return enum="status"/>
    </method>

    <method name="remove key recipient">
        Remove recipient with a given id.
        Return false if recipient with given id was not found.

        <argument name="recipient id" class="data"/>

        <return  type="boolean"/>
    </method>

    <method name="remove all">
        Remove all existent recipients.
    </method>

    <method name="packed len" is_const="1">
        Return length of serialized message info.
        Actual length can be obtained right after applying changes.

        <return type="size"/>
    </method>

    <method name="pack">
        Return serialized message info.
        Precondition: this method can be called after "apply".

        <argument name="message info" class="buffer">
            <length method="packed len"/>
        </argument>
    </method>

    <method name="read prefix" is_static="1">
        Read message info prefix from the given data, and if it is valid,
        return a length of bytes of the whole message info.

        Zero returned if length can not be determined from the given data,
        and this means that there is no message info at the data beginning.

        <argument name="data" class="data"/>

        <return type="size"/>
    </method>
</class>
