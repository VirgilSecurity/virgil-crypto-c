<class name="message cipher" scope="private" visibility="private">

    <require impl="sha512"/>
    <require impl="hkdf"/>
    <require class="buffer" api="defs" project="common"/>

    <require module="group session typedefs" definition="public"/>


    <method name="encrypt len">
        <argument name="plain text len" type="size"/>

        <return type="size"/>
    </method>

    <method name="decrypt len" is_const="1">
        <argument name="cipher text len" type="size"/>

        <return type="size"/>
    </method>

    <method name="configure cipher" declaration="private" is_static="1">
        Configure given symmetric cipher.

        <argument name="cipher" impl="aes256 gcm" access="readwrite"/>
        <argument name="key" class="const vscf_group_session_symmetric_key_t" is_reference="0" library="internal"/>
        <argument name="salt" class="const vscf_group_session_salt_t" is_reference="0" library="internal"/>
    </method>

    <method name="encrypt" declaration="private">
        <argument name="key" class="const vscf_group_session_symmetric_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="salt" class="const vscf_group_session_salt_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="plain text" class="data"/>
        <argument name="additional data" class="data"/>

        <argument name="buffer" class="buffer">
            <length method="encrypt len">
                <proxy argument="plain text" to="plain text len" cast="data_length"/>
            </length>
        </argument>

        <return enum="status"/>
    </method>

    <method name="decrypt" declaration="private">
        <argument name="key" class="const vscf_group_session_symmetric_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="salt" class="const vscf_group_session_salt_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="cipher text" class="data"/>
        <argument name="additional data" class="data"/>

        <argument name="buffer" class="buffer">
            <length method="decrypt len">
                <proxy argument="cipher text" to="cipher text len" cast="data_length"/>
            </length>
        </argument>

        <return enum="status"/>
    </method>

    <method name="pad then encrypt" scope="private">
        <argument name="padding" class="message padding" access="readwrite"/>
        <argument name="data" class="data"/>
        <argument name="key" class="const vscf_group_session_symmetric_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="salt" class="const vscf_group_session_salt_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="ad" class="data"/>
        <argument name="cipher text" class="buffer" access="readwrite"/>

        <return enum="status"/>
    </method>

    <method name="decrypt then remove pad" scope="private">
        <argument name="data" class="data"/>
        <argument name="key" class="const vscf_group_session_symmetric_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="salt" class="const vscf_group_session_salt_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="ad" class="data"/>
        <argument name="plain text" class="buffer" access="readwrite"/>

        <return enum="status"/>
    </method>

</class>
