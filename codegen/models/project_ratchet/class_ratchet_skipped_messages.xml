<class name="ratchet skipped messages" context="internal" scope="internal">

    <require class="ratchet common hidden" scope="context"/>
    <require class="ratchet chain key" scope="private"/>

    <require module="ratchet typedefs" scope="context"/>

    <require header="vscr_RatchetSession.pb.h" scope="public"/>
    <require header="pb_decode.h" scope="public"/>
    <require header="pb_encode.h" scope="public"/>

    <property name="roots count" type="unsigned" size="4" access="readwrite"/>
    <property name="key ids" class="vscr_ratchet_key_id_t" is_reference="0" library="internal" access="readwrite">
        <array length="fixed" length_constant=".(class_ratchet_common_hidden_constant_max_skipped_dh)"/>
    </property>
    <property name="root nodes" class="ratchet skipped messages root node" access="readwrite">
        <array length="fixed" length_constant=".(class_ratchet_common_hidden_constant_max_skipped_dh)"/>
    </property>

    <method name="find key" is_const="1">
        <argument name="counter" type="unsigned" size="4"/>
        <argument name="key id" class="vscr_ratchet_key_id_t" is_reference="0" library="internal"/>

        <return class="ratchet message key" access="readwrite"/>
    </method>

    <method name="find public key" is_const="1" scope="private">
        <argument name="key id" class="vscr_ratchet_key_id_t" is_reference="0" library="internal"/>

        <return type="unsigned" size="4"/>
    </method>

    <method name="delete key">
        <argument name="key id" class="vscr_ratchet_key_id_t" is_reference="0" library="internal"/>
        <argument name="message key" class="ratchet message key" access="readwrite"/>
    </method>

    <method name="add public key">
        <argument name="key id" class="vscr_ratchet_key_id_t" is_reference="0" library="internal"/>
    </method>

    <method name="add key">
        <argument name="key id" class="vscr_ratchet_key_id_t" is_reference="0" library="internal"/>
        <argument name="message key" class="ratchet message key" access="readwrite"/>
    </method>

    <method name="serialize" is_const="1">
        <argument name="skipped messages pb" class="vscr_SkippedMessages" library="nanopb" access="readwrite"/>
    </method>

    <method name="deserialize" is_static="1">
        <argument name="skipped messages pb" class="vscr_SkippedMessages" library="nanopb"/>
        <argument name="skipped messages" class="self" access="readwrite"/>
    </method>
</class>
