<class name="http request">
    Handles HTTP request in a most generic way.

    <property name="method" class="str mutable"/>
    <property name="url" class="str mutable"/>
    <property name="body" class="buffer"/>
    <property name="auth header value" class="str mutable"/>
    <property name="headers" class="http header list"/>


    <constant name="method get" type="string" visibility="public" definition="private">
        HTTP method: GET

        <value value="GET"/>
    </constant>


    <constant name="method post" type="string" visibility="public" definition="private">
        HTTP method: POST

        <value value="POST"/>
    </constant>


    <constant name="method put" type="string" visibility="public" definition="private">
        HTTP method: PUT

        <value value="PUT"/>
    </constant>


    <constant name="method delete" type="string" visibility="public" definition="private">
        HTTP method: DELETE

        <value value="DELETE"/>
    </constant>


    <constructor name="with url">
        Create HTTP request with URL.

        <argument name="method" class="str"/>
        <argument name="url" class="str"/>
    </constructor>


    <constructor name="with body">
        Create HTTP request with URL and body.

        <argument name="method" class="str"/>
        <argument name="url" class="str"/>
        <argument name="body" class="data"/>
    </constructor>


    <method name="add header">
        Add HTTP header.

        <argument name="name" class="str"/>
        <argument name="value" class="str"/>
    </method>


    <method name="add header disown" scope="private">
        Add HTTP header.

        <argument name="header" class="http header" access="disown"/>
    </method>


    <method name="method" is_const="1">
        Return HTTP method.

        <return class="str"/>
    </method>


    <method name="url" is_const="1">
        Return HTTP URL.

        <return class="str"/>
    </method>


    <method name="body" is_const="1">
        Return HTTP body.

        <return class="data"/>
    </method>


    <method name="headers" is_const="1">
        Return HTTP headers.

        <return class="http header list"/>
    </method>


    <method name="set auth header value">
        Setup HTTP authorization header value: "&lt;type&gt; &lt;credentials&gt;".

        Note, it is not added automatically to headers.

        Motivation: some HTTP implementations require setting authorization header explicitly,
        and forbid adding it directly to the HTTP headers (i.e. iOS NSURLRequest).

        See, https://developer.apple.com/documentation/foundation/nsurlrequest#1776617

        <argument name="auth header value" class="str"/>
    </method>


    <method name="set auth header value from type and credentials">
        Setup HTTP authorization header value: "&lt;type&gt; &lt;credentials&gt;".

        Note, it is not added automatically to headers.

        Motivation: some HTTP implementations require setting authorization header explicitly,
        and forbid adding it directly to the HTTP headers (i.e. iOS NSURLRequest).

        See, https://developer.apple.com/documentation/foundation/nsurlrequest#1776617

        <argument name="auth type" class="str"/>
        <argument name="auth credentials" class="str"/>
    </method>


    <method name="auth header value" is_const="1">
        Return HTTP authorization header value: "&lt;type&gt; &lt;credentials&gt;".

        <return class="str"/>
    </method>
</class>
