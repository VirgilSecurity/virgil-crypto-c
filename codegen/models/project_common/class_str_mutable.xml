<class name="str mutable" context="public" lifecycle="none" is_value_type="1">
    Light version of the class "str buffer".

    Note, this class always handles a null-terminated string.
    Note, this class might be used to store copied strings within objects.
    Note, this class' ownership can not be retained.
    Note, this class can not be used as part of any public interface.

    <require header="ctype.h" is_system="1"/>


    <property name="chars" type="char" access="readwrite">
        Underlying characters array.

        <array length="given"/>
    </property>


    <property name="len" type="size">
        Characters array length.
    </property>


    <constructor name="from str">
        Create a mutable string by copying a given string.

        <argument name="str" class="str"/>
    </constructor>


    <constructor name="lowercase from str">
        Create a mutable string by converting a given string to lower case.

        <argument name="str" class="str"/>
    </constructor>


    <constructor name="concat">
        Create a mutable string by concatenating 2 strings.

        <argument name="lhs" class="str"/>
        <argument name="rhs" class="str"/>
    </constructor>


    <constructor name="concat with space sep">
        Create a mutable string by concatenating 2 strings separated with a space.

        <argument name="lhs" class="str"/>
        <argument name="rhs" class="str"/>
    </constructor>


    <method name="is valid">
        Returns true if underlying string is defined.

        <return type="boolean"/>
    </method>


    <method name="as str">
        Returns immutable str.

        <return class="str"/>
    </method>


    <method name="as data">
        Returns immutable str as bytes.

        <return class="data"/>
    </method>


    <method name="init" is_static="1">
        Init underlying structure.

        <argument name="self" class="self" access="readwrite" is_reference="1"/>
    </method>


    <method name="release" is_static="1">
        Deallocate underlying string.

        <argument name="self" class="self" access="readwrite" is_reference="1"/>
    </method>
</class>
