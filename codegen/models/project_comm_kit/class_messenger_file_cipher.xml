<class name="messenger file cipher">

    <require class="key provider" project="foundation"/>
    <require class="recipient cipher" project="foundation"/>
    <require interface="private key" project="foundation"/>
    <require impl="ctr drbg" project="foundation"/>
    <require class="str" project="common"/>
    <require class="error"/>

    <dependency name="random" interface="random" project="foundation" has_observers="1"/>

    <property name="key provider" class="key provider" project="foundation"/>
    <property name="recipient cipher" class="recipient cipher" project="foundation"/>

    <constant name="cipher recipient id" type="string" visibility="private">
        <value value="file-cipher"/>
    </constant>

    <method name="setup defaults">
        Setup predefined values to the uninitialized class dependencies.
        <return enum="status"/>
    </method>

    <!-- Encrypt functions -->
    <method name="init encryption out key len">
        <return type="size"/>
    </method>

    <method name="init encryption">
        <argument name="owner private key" interface="public key" project="foundation"/>
        <argument name="out key" class="buffer"/>
        <return enum="status"/>
    </method>

    <method name="start encryption out len">
        <return type="size"/>
    </method>

    <method name="start encryption">
        <argument name="data_len" type="size"/>
        <argument name="out" class="buffer"/>
        <return enum="status"/>
    </method>

    <method name="process encryption out len">
        <argument name="data_len" type="size"/>
        <return type="size"/>
    </method>

    <method name="process encryption">
        <argument name="data" class="data"/>
        <argument name="out" class="buffer"/>
        <return enum="status"/>
    </method>

    <method name="finish encryption out len">
        <return type="size"/>
    </method>

    <method name="finish encryption">
        <argument name="out" class="buffer"/>
        <return enum="status"/>
    </method>

    <!-- Decrypt functions -->
    <method name="start decryption">
        <argument name="key" class="data"/>
        <return enum="status"/>
    </method>

    <method name="process decryption out len">
        <argument name="data_len" type="size"/>
        <return type="size"/>
    </method>

    <method name="process decryption">
        <argument name="data" class="data"/>
        <argument name="out" class="buffer"/>
        <return enum="status"/>
    </method>

    <method name="finish decryption out len">
        <return type="size"/>
    </method>

    <method name="finish decryption">
        <argument name="out" class="buffer"/>
        <return enum="status"/>
    </method>

    <method name="finish decryption check sign">
        <argument name="owner public key" interface="public key" project="foundation"/>
        <return enum="status"/>
    </method>

</class>
