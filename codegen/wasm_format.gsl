.template 0
#   Copyright (C) 2015-2022 Virgil Security, Inc.
#
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are
#   met:
#
#       (1) Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#       (2) Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#       (3) Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived from
#       this software without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR
#   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#   DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
#   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
#   (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
#   SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#   HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
#   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
#   IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#
#   Lead Maintainer: Virgil Security Inc. <support@virgilsecurity.com>

gsl from "common.gsl"
gsl from "wasm_derive.gsl"

# ---------------------------------------------------------------------------
#   Return formatted multiline commented string.
# ---------------------------------------------------------------------------
function wasm_format_description(obj)
    if ! defined(my.obj.)
        return
    endif

    my.str = my.obj.
    my.str = string_indent(my.str)
    my.str = "* $(my.str:left, block, no)$(terminator)"
    my.str = string_indent(my.str, 1, 1)
    my.str = string_multi_rtrim(my.str)
    my.str = "/**" + terminator + my.str + terminator + " */"

    return my.str
endfunction

# ---------------------------------------------------------------------------
#   Return multiline formatted string with license.
# ---------------------------------------------------------------------------
function wasm_format_license(license)
    return wasm_format_description(my.license) ?
endfunction

# ---------------------------------------------------------------------------
#   Return formatted list of arguments without braces.
# ---------------------------------------------------------------------------
function wasm_format_argument_list (wasm_method)
    check_arguments (my, "wasm_method", my)

    for my.wasm_method.wasm_argument where is_false(wasm_argument.is_local)
        my.arg_list ?= ""
        my.arg_list += "$(wasm_argument.name:)$("=" + wasm_argument.default?:)"
        if ! last()
            my.arg_list += ", "
        endif
    endfor

    return my.arg_list
endfunction

# ---------------------------------------------------------------------------
#   Return formatted list of arguments without braces.
# ---------------------------------------------------------------------------
function wasm_format_prconditions(wasm_method, tab_count)
    check_arguments(my, "wasm_method", my)

    for my.wasm_method.wasm_precondition
        my.preconditions ?= ""
        my.preconditions += format_left(wasm_precondition., my.tab_count)
    endfor

    for my.wasm_method.wasm_argument
        for wasm_argument.wasm_precondition
            my.preconditions ?= ""
            my.preconditions += format_left(wasm_precondition., my.tab_count)
        endfor
    endfor

    return my.preconditions
endfunction

.endtemplate
