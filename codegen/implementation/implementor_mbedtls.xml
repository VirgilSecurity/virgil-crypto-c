<implementor name = "mbedtls" is_default = "1">
    Provide implementation based on the library ARM mbedTLS.

    <require library = "mbedTLS" />

    <implementation name = "sha224">
        This is MbedTLS implementation of SHA224.

        <require_include name = "mbedtls/sha256.h" type = "context" />
        <require_include name = "mbedtls/md.h" type = "context" />

        <interface name = "hash info">
            <constant name = "digest size" value = "28" />
        </interface>

        <interface name = "hash">
        </interface>

        <interface name = "hash stream">
            <context name = "hash ctx" class = "mbedtls_sha256_context" access = "readwrite" is_reference="0"/>
        </interface>

        <interface name = "hmac">
        </interface>

        <interface name = "hmac stream">
            <context name = "hmac ctx" class = "mbedtls_md_context_t" access = "readwrite" is_reference="0"/>
        </interface>
    </implementation>


    <implementation name = "sha256">
        This is MbedTLS implementation of SHA256.

        <require_include name = "mbedtls/sha256.h" type = "context" />
        <require_include name = "mbedtls/md.h" type = "context" />

        <interface name = "hash info">
            <constant name = "digest size" value = "32" />
        </interface>

        <interface name = "hash">
        </interface>

        <interface name = "hash stream">
            <context name = "hash ctx" class = "mbedtls_sha256_context" access = "readwrite" is_reference="0"/>
        </interface>

        <interface name = "hmac">
        </interface>

        <interface name = "hmac stream">
            <context name = "hmac ctx" class = "mbedtls_md_context_t" access = "readwrite" is_reference="0"/>
        </interface>
    </implementation>


    <implementation name = "sha384">
        This is MbedTLS implementation of SHA384.

        <require_include name = "mbedtls/sha512.h" type = "context" />
        <require_include name = "mbedtls/md.h" type = "context" />

        <interface name = "hash info">
            <constant name = "digest size" value = "48" />
        </interface>

        <interface name = "hash">
        </interface>

        <interface name = "hash stream">
            <context name = "hash ctx" class = "mbedtls_sha512_context" access = "readwrite" is_reference="0"/>
        </interface>

        <interface name = "hmac">
        </interface>

        <interface name = "hmac stream">
            <context name = "hmac ctx" class = "mbedtls_md_context_t" access = "readwrite" is_reference="0"/>
        </interface>
    </implementation>


    <implementation name = "sha512">
        This is MbedTLS implementation of SHA512.

        <require_include name = "mbedtls/sha512.h" type = "context" />
        <require_include name = "mbedtls/md.h" type = "context" />

        <interface name = "hash info">
            <constant name = "digest size" value = "64" />
        </interface>

        <interface name = "hash">
        </interface>

        <interface name = "hash stream">
            <context name = "hash ctx" class = "mbedtls_sha512_context" access = "readwrite" is_reference="0"/>
        </interface>
        
        <interface name = "hmac">
        </interface>

        <interface name = "hmac stream">
            <context name = "hmac ctx" class = "mbedtls_md_context_t" access = "readwrite" is_reference="0"/>
        </interface>
    </implementation>

    <implementation name="aes 256 gcm">
        Implementation of the symmetric cipher AES-256 bit in a GCM mode.
        Note, this implementation contains dynamic memory allocations,
        this should be improved in the future releases.

        <require_include name = "mbedtls/cipher.h" type = "context" />

        <interface name="encrypt"/>

        <interface name="decrypt"/>

        <interface name="cipher info">
            <constant name="nonce len" value="12"/>
            <constant name="key len" value="32"/>
            <constant name="key bitlen" value="256"/>
            <constant name="block len" value="16"/>
        </interface>

        <interface name="cipher">
            <context name="cipher ctx" class="mbedtls_cipher_context_t" access="readwrite" is_reference="0"/>

            <context name="key" type="data" access="readwrite">
                <array length="fixed" length_constant=".(class_aes_256_gcm_constant_key_len)"/>
            </context>

            <context name="nonce" type="data" access="readwrite">
                <array length="fixed" length_constant=".(class_aes_256_gcm_constant_nonce_len)"/>
            </context>
        </interface>

        <interface name="cipher auth info">
            <constant name="auth tag len" value="16"/>
        </interface>

        <interface name="auth encrypt"/>
        <interface name="auth decrypt"/>
        <interface name="cipher auth"/>
    </implementation>

    <!--
    <implementation name = "asn1_wr">
        This is MbedTLS implementation of ASN.1 writer.

        <c_include file = "mbedtls/asn1.h" is_system = "1" scope = "private" />
        <c_include file = "mbedtls/asn1write.h" is_system = "1" scope = "private" />


        <interface name = "asn1_writer" />

    </implementation>

    <implementation name = "asn1_rd">
        This is MbedTLS implementation of ASN.1 reader.

        <c_include file = "mbedtls/asn1.h" is_system = "1" scope = "private" />

        <interface name = "asn1_reader" />

    </implementation>
-->
</implementor>
